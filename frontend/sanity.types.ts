/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Gallery = {
  _type: "gallery";
  media?: Array<{
    _key: string;
  } & Media>;
};

export type TabLink = {
  _type: "tabLink";
  link?: Link;
  label?: string;
};

export type CallToAction = {
  _type: "callToAction";
  link?: Link;
  heading?: string;
  text?: string;
  buttonText?: string;
  hideImage?: boolean;
};

export type Link = {
  _type: "link";
  linkType?: "href" | "page" | "post" | "person" | "client" | "networkPartner" | "project" | "service" | "technology";
  href?: string;
  page?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  post?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  person?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "person";
  };
  client?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "client";
  };
  networkPartner?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "networkPartner";
  };
  project?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "project";
  };
  service?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "service";
  };
  technology?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "technology";
  };
  openInNewTab?: boolean;
};

export type TabbedContent = {
  _type: "tabbedContent";
  title?: string;
  tabs?: Array<{
    _key: string;
  } & Tab>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    linkType?: "href" | "page" | "post" | "person" | "client" | "networkPartner" | "project" | "service";
    href?: string;
    page?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    };
    post?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    person?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "person";
    };
    client?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "client";
    };
    networkPartner?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "networkPartner";
    };
    project?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "project";
    };
    service?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "service";
    };
    technology?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "technology";
    };
    openInNewTab?: boolean;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  _key: string;
} & Media>;

export type Tab = {
  _type: "tab";
  title: string;
  contentType: "content" | "links";
  media?: Media;
  content?: InfoSection;
  links?: Array<{
    _key: string;
  } & TabLink>;
};

export type InfoSection = {
  _type: "infoSection";
  content?: BlockContent;
};

export type Media = {
  _type: "media";
  mediaType?: "image" | "video";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  video?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    media?: unknown;
    _type: "file";
  };
  caption?: string;
};

export type PageBuilder = Array<{
  _key: string;
} & InfoSection | {
  _key: string;
} & TabbedContent | {
  _key: string;
} & Gallery | {
  _key: string;
} & CallToAction>;

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  heading: string;
  lead?: string;
  pageBuilder?: PageBuilder;
  seo?: Seo;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  excerpt?: string;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  date?: string;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "person";
  };
  pageBuilder?: PageBuilder;
};

export type Person = {
  _id: string;
  _type: "person";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  slug: Slug;
  firstName: string;
  lastName: string;
  email: string;
  excerpt?: string;
  picture: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder?: PageBuilder;
};

export type Client = {
  _id: string;
  _type: "client";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  excerpt?: string;
  linkWebsite?: string;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder?: PageBuilder;
};

export type Project = {
  _id: string;
  _type: "project";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  featured?: boolean;
  title: string;
  slug: Slug;
  content?: BlockContent;
  excerpt?: string;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder?: PageBuilder;
  client?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "client";
  };
  technologies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "technology";
  }>;
  networkPartners?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "networkPartner";
  }>;
  projects?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "project";
  }>;
  services?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  excerpt?: string;
  coverImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder?: PageBuilder;
};

export type Technology = {
  _id: string;
  _type: "technology";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  excerpt?: string;
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
};

export type NetworkPartner = {
  _id: string;
  _type: "networkPartner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  excerpt?: string;
  technologies?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "technology";
  }>;
  linkWebsite?: string;
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
};

export type ImageWithMetadata = {
  _type: "imageWithMetadata";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  changed?: boolean;
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  titleWebsite: string;
  seo?: Seo;
};

export type Seo = {
  _type: "seo";
  title?: string;
  description?: string;
  keywords?: Array<string>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  noIndex?: boolean;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask";
  path?: string;
  instructionKey?: string;
  started?: string;
  updated?: string;
  info?: string;
};

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status";
  tasks?: Array<{
    _key: string;
  } & SanityAssistInstructionTask>;
};

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations";
  title?: string;
  fields?: Array<{
    _key: string;
  } & SanityAssistSchemaTypeField>;
};

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type";
  type?: string;
};

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field";
  path?: string;
};

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context";
  reference: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "assist.instruction.context";
  };
};

export type AssistInstructionContext = {
  _id: string;
  _type: "assist.instruction.context";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  context?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: never;
    markDefs?: null;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput";
  message: string;
  description?: string;
};

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  } | {
    _key: string;
  } & SanityAssistInstructionFieldRef | {
    _key: string;
  } & SanityAssistInstructionContext | {
    _key: string;
  } & SanityAssistInstructionUserInput>;
  style?: "normal";
  listItem?: never;
  markDefs?: null;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef";
  path?: string;
};

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction";
  prompt?: SanityAssistInstructionPrompt;
  icon?: string;
  title?: string;
  userId?: string;
  createdById?: string;
  output?: Array<{
    _key: string;
  } & SanityAssistOutputField | {
    _key: string;
  } & SanityAssistOutputType>;
};

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field";
  path?: string;
  instructions?: Array<{
    _key: string;
  } & SanityAssistInstruction>;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Gallery | TabLink | CallToAction | Link | TabbedContent | BlockContent | Tab | InfoSection | Media | PageBuilder | Page | Post | Person | Client | Project | Service | Technology | NetworkPartner | ImageWithMetadata | Settings | Seo | MediaTag | SanityAssistInstructionTask | SanityAssistTaskStatus | SanityAssistSchemaTypeAnnotations | SanityAssistOutputType | SanityAssistOutputField | SanityAssistInstructionContext | AssistInstructionContext | SanityAssistInstructionUserInput | SanityAssistInstructionPrompt | SanityAssistInstructionFieldRef | SanityAssistInstruction | SanityAssistSchemaTypeField | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: settingsQuery
// Query: *[_type == "settings"][0] {  websiteTitle,  seo,  header{    ...,    primaryLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    },    socialLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    },    secondaryLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    }  },  footer{    ...,    copyrightText,    primaryLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    },    socialLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    },    secondaryLinks[] {      ...,      link {            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    }  }}
export type SettingsQueryResult = {
  websiteTitle: null;
  seo: Seo | null;
  header: null;
  footer: null;
} | null;
// Variable: sitemapData
// Query: *[_type == "page" || _type == "post" || _type == "project" || _type=="person" || _type=="service" || _type=="client" && defined(slug.current)] | order(_type asc) {    "slug": slug.current,    _type,    _updatedAt,  }
export type SitemapDataResult = Array<{
  slug: string;
  _type: "client";
  _updatedAt: string;
} | {
  slug: string;
  _type: "page";
  _updatedAt: string;
} | {
  slug: string;
  _type: "person";
  _updatedAt: string;
} | {
  slug: string;
  _type: "post";
  _updatedAt: string;
} | {
  slug: string;
  _type: "project";
  _updatedAt: string;
} | {
  slug: string;
  _type: "service";
  _updatedAt: string;
}>;

// Source: ./sanity/lib/queries/client.ts
// Variable: clientQuery
// Query: *[_type == "client" && slug.current == $slug][0]{      _id,  _type,  name,  "slug": slug.current,  excerpt,  linkWebsite,  coverImage,  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type ClientQueryResult = {
  _id: string;
  _type: "client";
  name: string;
  slug: string;
  excerpt: string | null;
  linkWebsite: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: null;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: null;
  }> | null;
} | null;
// Variable: clientMetaQuery
// Query: *[_type == "client" && slug.current == $slug][0]{      _id,  _type,  name,  excerpt,  coverImage  }
export type ClientMetaQueryResult = {
  _id: string;
  _type: "client";
  name: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
} | null;
// Variable: clientSlugs
// Query: *[_type == "client" && defined(slug.current)]{    "slug": slug.current  }
export type ClientSlugsResult = Array<{
  slug: string;
}>;
// Variable: featuredclientsQuery
// Query: *[_type == "client" && featured == true && defined(slug.current)] | order(_updatedAt desc) {      _id,  _type,  name,  "slug": slug.current,  excerpt,  linkWebsite,  coverImage,  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type FeaturedclientsQueryResult = Array<never>;

// Source: ./sanity/lib/queries/page.ts
// Variable: getPageQuery
// Query: *[_type == 'page' && slug.current == $slug][0]{        _id,    _type,    name,    slug,    heading,    lead,    "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type GetPageQueryResult = {
  _id: string;
  _type: "page";
  name: string;
  slug: Slug;
  heading: string;
  lead: string | null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: null;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: null;
  }> | null;
} | null;
// Variable: getPageMeta
// Query: *[_type == "page" && slug.current == $slug][0]{          _id,    _type,    heading,    lead,    seo {      title,      description,      image {        asset -> {          url        }      },      keywords,      noIndex    }  }
export type GetPageMetaResult = {
  _id: string;
  _type: "page";
  heading: string;
  lead: string | null;
  seo: {
    title: string | null;
    description: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    keywords: Array<string> | null;
    noIndex: boolean | null;
  } | null;
} | null;
// Variable: pagesSlugs
// Query: *[_type == "page" && defined(slug.current)]  {"slug": slug.current}
export type PagesSlugsResult = Array<{
  slug: string;
}>;

// Source: ./sanity/lib/queries/person.ts
// Variable: personQuery
// Query: *[_type == "person" && slug.current == $slug][0]{      _id,  _type,  "title": firstName + " " + lastName,  "slug": slug.current,  excerpt,  picture,  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type PersonQueryResult = {
  _id: string;
  _type: "person";
  title: string;
  slug: string;
  excerpt: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: null;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: null;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: null;
  }> | null;
} | null;
// Variable: personMetaQuery
// Query: *[_type == "person" && slug.current == $slug][0]{      _id,  _type,  "title": firstName + " " + lastName,  excerpt,  picture  }
export type PersonMetaQueryResult = {
  _id: string;
  _type: "person";
  title: string;
  excerpt: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
} | null;
// Variable: personSlugs
// Query: *[_type == "person" && defined(slug.current)]{    "slug": slug.current  }
export type PersonSlugsResult = Array<{
  slug: string;
}>;

// Source: ./sanity/lib/queries/post.ts
// Variable: allPostsQuery
// Query: *[_type == "post" && defined(slug.current)] | order(date desc, _updatedAt desc) {        _id,  _type,  "status": select(_originalId in path("drafts.**") => "draft", "published"),  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  coverImage,  "date": coalesce(date, _updatedAt),  "author": author->{firstName, lastName, picture, slug},  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }    }
export type AllPostsQueryResult = Array<{
  _id: string;
  _type: "post";
  status: "draft" | "published";
  title: string;
  slug: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  date: string;
  author: {
    firstName: string;
    lastName: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      changed?: boolean;
      _type: "imageWithMetadata";
    };
    slug: Slug;
  } | null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: string;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: string;
  }> | null;
}>;
// Variable: morePostsQuery
// Query: *[_type == "post" && _id != $skip && defined(slug.current)] | order(date desc, _updatedAt desc) [0...$limit] {        _id,  _type,  "status": select(_originalId in path("drafts.**") => "draft", "published"),  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  coverImage,  "date": coalesce(date, _updatedAt),  "author": author->{firstName, lastName, picture, slug},  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }    }
export type MorePostsQueryResult = Array<{
  _id: string;
  _type: "post";
  status: "draft" | "published";
  title: string;
  slug: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  date: string;
  author: {
    firstName: string;
    lastName: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      changed?: boolean;
      _type: "imageWithMetadata";
    };
    slug: Slug;
  } | null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: string;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: string;
  }> | null;
}>;
// Variable: postQuery
// Query: *[_type == "post" && slug.current == $slug] [0] {      content[]{      ...,      markDefs[]{        ...,            _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }    },      _id,  _type,  "status": select(_originalId in path("drafts.**") => "draft", "published"),  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  coverImage,  "date": coalesce(date, _updatedAt),  "author": author->{firstName, lastName, picture, slug},  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }    }
export type PostQueryResult = {
  content: null;
  _id: string;
  _type: "post";
  status: "draft" | "published";
  title: string;
  slug: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
  date: string;
  author: {
    firstName: string;
    lastName: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      changed?: boolean;
      _type: "imageWithMetadata";
    };
    slug: Slug;
  } | null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: string;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: string;
  }> | null;
} | null;
// Variable: postMetaQuery
// Query: *[_type == "post" && slug.current == $slug] [0] {      _id,  _type,  title,  "date": coalesce(date, _updatedAt),  "author": author->{firstName, lastName, picture, slug},  excerpt,  coverImage  }
export type PostMetaQueryResult = {
  _id: string;
  _type: "post";
  title: string;
  date: string;
  author: {
    firstName: string;
    lastName: string;
    picture: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      changed?: boolean;
      _type: "imageWithMetadata";
    };
    slug: Slug;
  } | null;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
} | null;
// Variable: postPagesSlugs
// Query: *[_type == "post" && defined(slug.current)]    {"slug": slug.current}
export type PostPagesSlugsResult = Array<{
  slug: string;
}>;

// Source: ./sanity/lib/queries/project.ts
// Variable: projectQuery
// Query: *[_type == "project" && slug.current == $slug][0]{      _id,  _type,  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  content,  coverImage {        "alt": asset->altText,    asset {        ...,        }  },  client->{    _id,    name,    coverImage {        "alt": asset->altText,    asset {        ...,        }  },    description,    "slug": slug.current  },  technologies[]->{    _id,    name  },  networkPartners[]->{    _id,    name  },  services[]->{    _id,    title,    "slug": slug.current,  },  projects[]->{    _id,    title,    "slug": slug.current,    coverImage {        "alt": asset->altText,    asset {        ...,        }  },    excerpt  },  seo {    title,    description,    keywords,    noIndex,    image {      asset->{        url      }    }  },  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type ProjectQueryResult = {
  _id: string;
  _type: "project";
  title: string;
  slug: string;
  excerpt: string | null;
  content: BlockContent | null;
  coverImage: {
    alt: string | null;
    asset: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
    } | null;
  };
  client: {
    _id: string;
    name: string;
    coverImage: {
      alt: string | null;
      asset: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
      } | null;
    };
    description: null;
    slug: string;
  } | null;
  technologies: Array<{
    _id: string;
    name: string;
  }> | null;
  networkPartners: Array<{
    _id: string;
    name: string;
  }> | null;
  services: Array<{
    _id: string;
    title: string;
    slug: string;
  }> | null;
  projects: Array<{
    _id: string;
    title: string;
    slug: string;
    coverImage: {
      alt: string | null;
      asset: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
      } | null;
    };
    excerpt: string | null;
  }> | null;
  seo: null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: string;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: string;
  }> | null;
} | null;
// Variable: projectMetaQuery
// Query: *[_type == "project" && slug.current == $slug][0]{      _id,  _type,  title,  excerpt,  coverImage  }
export type ProjectMetaQueryResult = {
  _id: string;
  _type: "project";
  title: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  };
} | null;
// Variable: projectSlugs
// Query: *[_type == "project" && defined(slug.current)]{    "slug": slug.current  }
export type ProjectSlugsResult = Array<{
  slug: string;
}>;
// Variable: featuredProjectsQuery
// Query: *[_type == "project" && featured == true && defined(slug.current)] | order(_updatedAt desc) {      _id,  _type,  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  "threedurl": threedmodel.asset->url,  coverImage {        "alt": asset->altText,    asset {        ...,        }  },  }
export type FeaturedProjectsQueryResult = Array<{
  _id: string;
  _type: "project";
  title: string;
  slug: string;
  excerpt: string | null;
  threedurl: null;
  coverImage: {
    alt: string | null;
    asset: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
    } | null;
  };
}>;

// Source: ./sanity/lib/queries/service.ts
// Variable: serviceQuery
// Query: *[_type == "service" && slug.current == $slug][0]{      _id,  _type,  "status": select(_originalId in path("drafts.**") => "draft", "published"),  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  coverImage,  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type ServiceQueryResult = {
  _id: string;
  _type: "service";
  status: "draft" | "published";
  title: string;
  slug: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  } | null;
  pageBuilder: Array<{
    _key: string;
    _type: "callToAction";
    link: {
      _type: "link";
      linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
      href: string | null;
      page: {
        slug: Slug;
      } | null;
      post: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      person: {
        slug: Slug;
        firstName: string;
        picture: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      client: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      networkPartner: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      project: {
        title: string;
        slug: Slug;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      service: {
        slug: Slug;
        title: string;
        excerpt: string | null;
        coverImage: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        } | null;
      } | null;
      technology: {
        slug: Slug;
        name: string;
        excerpt: string | null;
        logo: {
          alt: string | null;
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
        };
      } | null;
      openInNewTab?: boolean;
      _key: null;
      label: null;
      reference: null;
    } | null;
    heading?: string;
    text?: string;
    buttonText?: string;
    hideImage?: boolean;
    projectTitle: string;
  } | {
    _key: string;
    _type: "gallery";
    media: Array<{
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        changed?: boolean;
        _type: "imageWithMetadata";
        alt: string | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "infoSection";
    content: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        linkType?: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service";
        href?: string;
        page?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        };
        post?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        person?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "person";
        };
        client?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "client";
        };
        networkPartner?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "networkPartner";
        };
        project?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "project";
        };
        service?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "service";
        };
        technology?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "technology";
        };
        openInNewTab?: boolean;
        _type: "link";
        _key: string;
        link: null;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
      image: null;
    } | {
      _key: string;
      _type: "media";
      mediaType?: "image" | "video";
      image: {
        alt: string | null;
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
        } | null;
      } | null;
      video?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
        };
        media?: unknown;
        _type: "file";
      };
      caption?: string;
      markDefs: null;
    }> | null;
    projectTitle: string;
  } | {
    _key: string;
    _type: "tabbedContent";
    title?: string;
    tabs: Array<{
      _key: string;
      _type: "tab";
      title: string;
      contentType: "content" | "links";
      media: {
        _type: "media";
        mediaType?: "image" | "video";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          changed?: boolean;
          _type: "imageWithMetadata";
          alt: string | null;
        } | null;
        video?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
          };
          media?: unknown;
          _type: "file";
        };
        caption?: string;
      } | null;
      content?: InfoSection;
      links: Array<{
        _key: string;
        _type: "tabLink";
        link: {
          _type: "link";
          _key: null;
          label: null;
          linkType: "client" | "href" | "networkPartner" | "page" | "person" | "post" | "project" | "service" | "technology" | null;
          href: string | null;
          reference: null;
          page: {
            slug: Slug;
          } | null;
          post: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          person: {
            slug: Slug;
            firstName: string;
            picture: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          client: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          networkPartner: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          project: {
            title: string;
            slug: Slug;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
          service: {
            slug: Slug;
            title: string;
            excerpt: string | null;
            coverImage: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            } | null;
          } | null;
          technology: {
            slug: Slug;
            name: string;
            excerpt: string | null;
            logo: {
              alt: string | null;
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
              } | null;
            };
          } | null;
        } | null;
        label?: string;
      }> | null;
    }> | null;
    projectTitle: string;
  }> | null;
} | null;
// Variable: serviceMetaQuery
// Query: *[_type == "service" && slug.current == $slug][0]{      _id,  _type,  title,  excerpt,  coverImage  }
export type ServiceMetaQueryResult = {
  _id: string;
  _type: "service";
  title: string;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    changed?: boolean;
    _type: "imageWithMetadata";
  } | null;
} | null;
// Variable: serviceSlugs
// Query: *[_type == "service" && defined(slug.current)]{    "slug": slug.current  }
export type ServiceSlugsResult = Array<{
  slug: string;
}>;
// Variable: featuredServicesQuery
// Query: *[_type == "service" && featured == true && defined(slug.current)] | order(_updatedAt desc) {      _id,  _type,  "status": select(_originalId in path("drafts.**") => "draft", "published"),  "title": coalesce(title, "Untitled"),  "slug": slug.current,  excerpt,  coverImage,  "pageBuilder": pageBuilder[]{    ...,    "projectTitle": ^.title,    _type == "callToAction" => {          link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      },    },    _type == "infoSection" => {      content[]{        ...,        markDefs[]{          ...,            link {      ...,          _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },      }        },        image{              "alt": asset->altText,    asset {        ...,        }        }      }    },    _type == "tabbedContent" => {        tabs[]{          ...,          media{            ...,            image{            ...,                "alt": asset->altText,    asset {        ...,        },            },          },          links[]{            ...,            link {                  _type,    _key,    label,    linkType,    href,    reference->{      _type,      _id,      title,      slug,    },    page->{      slug,      },    post->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    person->{      slug,      firstName,      picture {            "alt": asset->altText,    asset {        ...,        }      },    },    client->{      slug,      name,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    networkPartner->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },    project->{      title,      slug,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    service->{      slug,      title,      excerpt,      coverImage {            "alt": asset->altText,    asset {        ...,        }      },    },    technology->{      slug,      name,      excerpt,      logo {            "alt": asset->altText,    asset {        ...,        }      },    },            }          }        }      },    _type == "gallery" => {      media[]{        ...,        image{          ...,              "alt": asset->altText,    asset {        ...,        },        }      }    }  }  }
export type FeaturedServicesQueryResult = Array<never>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"settings\"][0] {\n  websiteTitle,\n  seo,\n  header{\n    ...,\n    primaryLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    },\n    socialLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    },\n    secondaryLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    }\n  },\n\n  footer{\n    ...,\n    copyrightText,\n    primaryLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    },\n    socialLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    },\n    secondaryLinks[] {\n      ...,\n      link {\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    }\n  }\n}": SettingsQueryResult;
    "\n  *[_type == \"page\" || _type == \"post\" || _type == \"project\" || _type==\"person\" || _type==\"service\" || _type==\"client\" && defined(slug.current)] | order(_type asc) {\n    \"slug\": slug.current,\n    _type,\n    _updatedAt,\n  }\n": SitemapDataResult;
    "\n  *[_type == \"client\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  name,\n  \"slug\": slug.current,\n  excerpt,\n  linkWebsite,\n  coverImage,\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": ClientQueryResult;
    "\n  *[_type == \"client\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  name,\n  excerpt,\n  coverImage\n\n  }\n": ClientMetaQueryResult;
    "\n  *[_type == \"client\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": ClientSlugsResult;
    "\n  *[_type == \"client\" && featured == true && defined(slug.current)] | order(_updatedAt desc) {\n    \n  _id,\n  _type,\n  name,\n  \"slug\": slug.current,\n  excerpt,\n  linkWebsite,\n  coverImage,\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": FeaturedclientsQueryResult;
    "\n  *[_type == 'page' && slug.current == $slug][0]{\n    \n    _id,\n    _type,\n    name,\n    slug,\n    heading,\n    lead,\n    \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": GetPageQueryResult;
    "\n    *[_type == \"page\" && slug.current == $slug][0]{\n      \n    _id,\n    _type,\n    heading,\n    lead,\n    seo {\n      title,\n      description,\n      image {\n        asset -> {\n          url\n        }\n      },\n      keywords,\n      noIndex\n    }\n\n  }\n": GetPageMetaResult;
    "\n  *[_type == \"page\" && defined(slug.current)]\n  {\"slug\": slug.current}\n": PagesSlugsResult;
    "\n  *[_type == \"person\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  \"title\": firstName + \" \" + lastName,\n  \"slug\": slug.current,\n  excerpt,\n  picture,\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": PersonQueryResult;
    "\n  *[_type == \"person\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  \"title\": firstName + \" \" + lastName,\n  excerpt,\n  picture\n\n  }\n": PersonMetaQueryResult;
    "\n  *[_type == \"person\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": PersonSlugsResult;
    "\n    *[_type == \"post\" && defined(slug.current)] | order(date desc, _updatedAt desc) {\n      \n  _id,\n  _type,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  coverImage,\n  \"date\": coalesce(date, _updatedAt),\n  \"author\": author->{firstName, lastName, picture, slug},\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n    }\n  ": AllPostsQueryResult;
    "\n    *[_type == \"post\" && _id != $skip && defined(slug.current)] | order(date desc, _updatedAt desc) [0...$limit] {\n      \n  _id,\n  _type,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  coverImage,\n  \"date\": coalesce(date, _updatedAt),\n  \"author\": author->{firstName, lastName, picture, slug},\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n    }\n  ": MorePostsQueryResult;
    "\n    *[_type == \"post\" && slug.current == $slug] [0] {\n      content[]{\n      ...,\n      markDefs[]{\n        ...,\n        \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n    },\n    \n  _id,\n  _type,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  coverImage,\n  \"date\": coalesce(date, _updatedAt),\n  \"author\": author->{firstName, lastName, picture, slug},\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n    }\n": PostQueryResult;
    "\n  *[_type == \"post\" && slug.current == $slug] [0] {\n    \n  _id,\n  _type,\n  title,\n  \"date\": coalesce(date, _updatedAt),\n  \"author\": author->{firstName, lastName, picture, slug},\n  excerpt,\n  coverImage\n\n  }\n": PostMetaQueryResult;
    "\n    *[_type == \"post\" && defined(slug.current)]\n    {\"slug\": slug.current}\n  ": PostPagesSlugsResult;
    "\n  *[_type == \"project\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  content,\n  coverImage {\n    \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n  },\n  client->{\n    _id,\n    name,\n    coverImage {\n    \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n  },\n    description,\n    \"slug\": slug.current\n  },\n  technologies[]->{\n    _id,\n    name\n  },\n  networkPartners[]->{\n    _id,\n    name\n  },\n  services[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n  },\n  projects[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    coverImage {\n    \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n  },\n    excerpt\n  },\n  seo {\n    title,\n    description,\n    keywords,\n    noIndex,\n    image {\n      asset->{\n        url\n      }\n    }\n  },\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": ProjectQueryResult;
    "\n  *[_type == \"project\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  title,\n  excerpt,\n  coverImage\n\n  }\n": ProjectMetaQueryResult;
    "\n  *[_type == \"project\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": ProjectSlugsResult;
    "\n  *[_type == \"project\" && featured == true && defined(slug.current)] | order(_updatedAt desc) {\n    \n  _id,\n  _type,\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  \"threedurl\": threedmodel.asset->url,\n  coverImage {\n    \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n  },\n\n  }\n": FeaturedProjectsQueryResult;
    "\n  *[_type == \"service\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  coverImage,\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": ServiceQueryResult;
    "\n  *[_type == \"service\" && slug.current == $slug][0]{\n    \n  _id,\n  _type,\n  title,\n  excerpt,\n  coverImage\n\n  }\n": ServiceMetaQueryResult;
    "\n  *[_type == \"service\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": ServiceSlugsResult;
    "\n  *[_type == \"service\" && featured == true && defined(slug.current)] | order(_updatedAt desc) {\n    \n  _id,\n  _type,\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\n  \"title\": coalesce(title, \"Untitled\"),\n  \"slug\": slug.current,\n  excerpt,\n  coverImage,\n  \n\"pageBuilder\": pageBuilder[]{\n    ...,\n    \"projectTitle\": ^.title,\n    _type == \"callToAction\" => {\n        \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n,\n    },\n    _type == \"infoSection\" => {\n      content[]{\n        ...,\n        markDefs[]{\n          ...,\n          \n  link {\n      ...,\n      \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n      }\n\n        },\n        image{\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n        }\n      }\n    },\n    _type == \"tabbedContent\" => {\n        tabs[]{\n          ...,\n          media{\n            ...,\n            image{\n            ...,\n            \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n            },\n          },\n          links[]{\n            ...,\n            link {\n              \n    _type,\n    _key,\n    label,\n    linkType,\n    href,\n    reference->{\n      _type,\n      _id,\n      title,\n      slug,\n    },\n    page->{\n      slug,  \n    },\n    post->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    person->{\n      slug,\n      firstName,\n      picture {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    client->{\n      slug,\n      name,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    networkPartner->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    project->{\n      title,\n      slug,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    service->{\n      slug,\n      title,\n      excerpt,\n      coverImage {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n    technology->{\n      slug,\n      name,\n      excerpt,\n      logo {\n        \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n\n      },\n    },\n\n            }\n          }\n        }\n      },\n    _type == \"gallery\" => {\n      media[]{\n        ...,\n        image{\n          ...,\n          \n    \"alt\": asset->altText,\n    asset {\n        ...,\n        }\n,\n        }\n      }\n    }\n  }\n\n\n  }\n": FeaturedServicesQueryResult;
  }
}
